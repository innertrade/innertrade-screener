      - name: Deploy over SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: root
          key: ${{ secrets.VPS_SSH_KEY }}
          script_stop: true
          command_timeout: 30m
          script: |
            set -euo pipefail
            APP=/home/deploy/apps/innertrade-screener

            install -d -m 755 -o deploy -g deploy "$APP"
            su -s /bin/bash -c "
              set -e
              cd '$APP'
              if [ ! -d .git ]; then
                git init
                git remote add origin git@github.com:innertrade/innertrade-screener.git
              else
                git remote set-url origin git@github.com:innertrade/innertrade-screener.git || true
              fi
              git fetch --depth=1 origin main
              git reset --hard origin/main
            " deploy

            cd "$APP"
            [ -f .env ] || { install -m 600 /dev/null .env && chown deploy:deploy .env; }
            grep -q '^TELEGRAM_BOT_TOKEN=' .env || echo 'TELEGRAM_BOT_TOKEN=' >> .env
            grep -q '^TELEGRAM_CHAT_ID='   .env || echo 'TELEGRAM_CHAT_ID='   >> .env
            sed -i \
              -e "s|^TELEGRAM_BOT_TOKEN=.*|TELEGRAM_BOT_TOKEN=${{ secrets.TELEGRAM_BOT_TOKEN }}|" \
              -e "s|^TELEGRAM_CHAT_ID=.*|TELEGRAM_CHAT_ID=${{ secrets.TELEGRAM_CHAT_ID }}|" \
              .env
            chown deploy:deploy .env

            su -s /bin/bash -c "
              python3 -m venv '$APP/.venv'
              '$APP/.venv/bin/pip' install -U pip wheel certifi
              '$APP/.venv/bin/pip' install -r '$APP/requirements.txt'
            " deploy

            CERT_FILE=$("$APP/.venv/bin/python" -c "import certifi, sys; print(certifi.where(), end='')")
            ln -sf "$CERT_FILE" "$APP/cacert.pem"

            install -m 644 "$APP/deploy/systemd/"*.service /etc/systemd/system/
            systemctl daemon-reload
            systemctl enable --now screener.service push_signals.service menu_bot.service || true
            systemctl restart screener.service push_signals.service menu_bot.service || true
