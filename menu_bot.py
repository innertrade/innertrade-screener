from __future__ import annotations
import os
from datetime import datetime, timezone, timedelta
from dotenv import load_dotenv
from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes

load_dotenv()
BOT_TOKEN = os.getenv("TELEGRAM_BOT_TOKEN","")
CHAT_ID = int(os.getenv("TELEGRAM_CHAT_ID","0"))

MSK = timezone(timedelta(hours=3))

KB = ReplyKeyboardMarkup(
    [
        ["üìä –î–∞—à–±–æ—Ä–¥ –±–∞–±–ª—ã", "üå° –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ —Ä—ã–Ω–∫–∞"],
        ["üì∞ –ù–æ–≤–æ—Å—Ç–∏", "üßÆ –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä"],
        ["üì° –°–∏–≥–Ω–∞–ª—ã 1: ‚úÖ ON", "‚öôÔ∏è –°–∏–≥–Ω–∞–ª—ã 2: ‚õî OFF"],
    ],
    resize_keyboard=True
)

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    now = datetime.now(MSK).strftime("%Y-%m-%d %H:%M:%S MSK")
    await update.message.reply_text(f"–ü—Ä–∏–≤–µ—Ç! –í—Ä–µ–º—è: {now}", reply_markup=KB)

async def echo(update: Update, context: ContextTypes.DEFAULT_TYPE):
    txt = (update.message.text or "").strip()
    await update.message.reply_text(f"–í—ã –Ω–∞–∂–∞–ª–∏: {txt}", reply_markup=KB)

def main():
    app = Application.builder().token(BOT_TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, echo))
    app.run_polling()

if __name__ == "__main__":
    main()
